log() %>%
as.data.frame() %>%
mutate(sample_num = row_number()) %>%
pivot_longer(-c(sample_num),
names_to='metabolite', values_to="concentration")
p1 <-
df_before %>%
ggplot() +
geom_boxplot(aes(x=sample_num,
y=concentration,
group=sample_num)) +
xlab("Sample Number") +
ylab("Concentration")
df_after <-
normalized_dat %>%
.[1:100, ] %>%
log() %>%
as.data.frame() %>%
mutate(sample_num = row_number()) %>%
pivot_longer(-c(sample_num),
names_to='metabolite', values_to="concentration")
p2 <-
df_after %>%
ggplot() +
geom_boxplot(aes(x=sample_num,
y=concentration,
group=sample_num)) +
xlab("Sample Number") +
ylab("Concentration")
p1 / p2
# Chunk 11
args(t.test)
# Chunk 12
log_norm_dat <- log(normalized_dat)
# Chunk 13
metabolites <- colnames(log_norm_dat)
p_vals <- vector('double', length(metabolites))
names(p_vals) <- metabolites
for (metabolite in metabolites) {
male   <- log_norm_dat[data_env$gender==1, metabolite]
female <- log_norm_dat[data_env$gender==2, metabolite]
p_vals[metabolite] <- t.test(male, female)$p.value
}
hist(p_vals,
main='P-values for Metabolites by Sex',
xlab='P values')
# Chunk 14
args(p.adjust)
# Chunk 15
adj_p_vals <- p.adjust(p_vals, 'bonferroni')
par(mfrow = c(1, 2))
hist(p_vals,
main='Original P-values',
xlab='P values')
adj_p_vals <- p.adjust(p_vals, 'bonferroni')
hist(adj_p_vals,
main='Bonferroni corrected P-values',
xlab='P values')
# Chunk 16
before <- length(which(p_vals < 0.05))
after <- length(which(adj_p_vals < 0.05))
bp <- barplot(c(before, after),
main = "Significant Metabolites by Sex",
ylab = "# Significant Metabolites",
names.arg = c('Before correction', 'After correction'),
col = c("#f45044", "#4496f4"))
text(bp, c(before,after)/2, labels = c(before,after), font = 2)
library(knitr)
top_ten <- names(sort(adj_p_vals)[1:10])
data_env$annotations %>%
as.data.frame() %>%
filter(name %in% top_ten) %>%
kable()
data_env$annotations %>%
as.data.frame()
data_env$annotations %>%
as.data.frame() %>% head()
data_env$annotations
data_env$annotations %>% head
data_env$annotations %>% typeof
which(1, c(1,2,3))
data_env$annotations
data_env$annotations %>% colnames
data_env$annotations %>% rownames
rownames(log_norm_dat)
colnames(log_norm_dat)
rownames(data_env$annotations) <- colanmes(log_norm_dat)
rownames(data_env$annotations) <- colnames(log_norm_dat)
data_env$annotations[top_ten, ]
top_ten
sort(adj_p_vals)[1:10]
library(knitr)
top_ten <- names(sort(adj_p_vals)[1:10])
rownames(data_env$annotations) <- colnames(log_norm_dat)
data_env$annotations[top_ten, ] %>%
kable()
?t.test
top_hit <- names(sort(adj_p_vals)[1])
male <- log_norm_dat[data_env$gender==1, top_hit]
female <- log_norm_dat[data_env$gender==2, top_hit]
male <- c(male, rep(NA, length(female) - length(male)))
df <-
data.frame(Male=male,
Female=female) %>%
mutate(index = row_number()) %>%
pivot_longer(-c(index),
names_to='sex', values_to="concentration") %>%
mutate(sex = factor(sex, levels = c('Male', 'Female')))
df %>%
ggplot() +
geom_boxplot(aes(x=sex,
y=concentration,
fill=sex),
width = 0.5
) +
theme(legend.position = "none") +
labs(title=paste('Male vs Female Concentration of', top_hit)) +
xlab("") +
ylab("Normalized Concentration")
body(t.test)
t.test
stats:::t.test
stats:::t.test.default
args(stats:::t.test.default)
degree(graph) %>%
table()
library(igraph)
graph <- graph.adjacency(adj_mat,
weighted = TRUE,
diag = FALSE,
mode = 'directed')
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE,
warning=FALSE,
error=FALSE)
# Chunk 2
library(magrittr)
data_dir <- "/home/x1/Documents/Weill_Cornell/Functional_Interpretation/metabolomics/homework_1/data/"
data_filename <- list.files(data_dir, "Simulated_metabolomics_data.RData",
full.names = TRUE)
data_filename %<>% normalizePath(mustWork=TRUE)
data_env <- new.env()
load(data_filename, envir = data_env)
ls(data_env)
# Chunk 3
str(data_env$gender)
# Chunk 4
str(data_env$annotations)
# Chunk 5
str(data_env$dat)
# Chunk 6
library(tidyverse)
library(patchwork)
# Chunk 7
df <-
data_env %>%
.$dat %>%
log() %>%
as.data.frame() %>%
mutate(sample_num = row_number()) %>%
pivot_longer(-c(sample_num),
names_to='metabolite', values_to="concentration")
plot_list <- vector('list', 3)
for (group_num in 1:9) {
first_sample <- 1 + (300 * (group_num - 1))
last_sample <- 300 * (group_num - 1) + 300
plot_list[[group_num]] <- df %>%
filter(sample_num >= first_sample,
sample_num <= last_sample) %>%
ggplot() +
geom_boxplot(aes(x=sample_num,
y=concentration,
group=sample_num)) +
ylim(c(-4, 6)) +
xlab("Sample Number") +
ylab("Concentration")
}
plot_list[[1]] / plot_list[[2]] / plot_list[[3]]
# Chunk 8
plot_list[[1]]
# Chunk 9
median_sample <- apply(data_env$dat, 2, median)
normalized_dat <- data_env$dat
for (i in 1:nrow(normalized_dat)) {
quotient <- data_env$dat[i,] / median_sample
median_quotient <- median(quotient)
normalized_dat[i,] = data_env$dat[i,] / median_quotient
}
# Chunk 10
library(tidyverse)
library(patchwork)
df_before <-
data_env %>%
.$dat %>%
.[1:100, ] %>%
log() %>%
as.data.frame() %>%
mutate(sample_num = row_number()) %>%
pivot_longer(-c(sample_num),
names_to='metabolite', values_to="concentration")
p1 <-
df_before %>%
ggplot() +
geom_boxplot(aes(x=sample_num,
y=concentration,
group=sample_num)) +
xlab("Sample Number") +
ylab("Concentration")
df_after <-
normalized_dat %>%
.[1:100, ] %>%
log() %>%
as.data.frame() %>%
mutate(sample_num = row_number()) %>%
pivot_longer(-c(sample_num),
names_to='metabolite', values_to="concentration")
p2 <-
df_after %>%
ggplot() +
geom_boxplot(aes(x=sample_num,
y=concentration,
group=sample_num)) +
xlab("Sample Number") +
ylab("Concentration")
p1 / p2
# Chunk 11
log_norm_dat <- log(normalized_dat)
# Chunk 12
args(stats:::t.test.default)
# Chunk 13
metabolites <- colnames(log_norm_dat)
p_vals <- vector('double', length(metabolites))
names(p_vals) <- metabolites
for (metabolite in metabolites) {
male   <- log_norm_dat[data_env$gender==1, metabolite]
female <- log_norm_dat[data_env$gender==2, metabolite]
p_vals[metabolite] <- t.test(male, female)$p.value
}
hist(p_vals,
main='P-values for Metabolites by Sex',
xlab='P values')
# Chunk 14
args(p.adjust)
# Chunk 15
adj_p_vals <- p.adjust(p_vals, 'bonferroni')
par(mfrow = c(1, 2))
hist(p_vals,
main='Original P-values',
xlab='P values')
adj_p_vals <- p.adjust(p_vals, 'bonferroni')
hist(adj_p_vals,
main='Bonferroni corrected P-values',
xlab='P values')
# Chunk 16
before <- length(which(p_vals < 0.05))
after <- length(which(adj_p_vals < 0.05))
bp <- barplot(c(before, after),
main = "Significant Metabolites by Sex",
ylab = "# Significant Metabolites",
names.arg = c('Before correction', 'After correction'),
col = c("#f45044", "#4496f4"))
text(bp, c(before,after)/2, labels = c(before,after), font = 2)
# Chunk 17
library(knitr)
top_ten <- names(sort(adj_p_vals)[1:10])
rownames(data_env$annotations) <- colnames(log_norm_dat)
data_env$annotations[top_ten, ] %>%
kable()
# Chunk 18
top_hit <- names(sort(adj_p_vals)[1])
male <- log_norm_dat[data_env$gender==1, top_hit]
female <- log_norm_dat[data_env$gender==2, top_hit]
male <- c(male, rep(NA, length(female) - length(male)))
df <-
data.frame(Male=male,
Female=female) %>%
mutate(index = row_number()) %>%
pivot_longer(-c(index),
names_to='sex', values_to="concentration") %>%
mutate(sex = factor(sex, levels = c('Male', 'Female')))
df %>%
ggplot() +
geom_boxplot(aes(x=sex,
y=concentration,
fill=sex),
width = 0.5
) +
theme(legend.position = "none") +
labs(title=paste('Male vs Female Concentration of', top_hit)) +
xlab("") +
ylab("Normalized Concentration")
# Chunk 19
pcor <- ppcor::pcor(log_norm_dat)
names(pcor)
# Chunk 20
p_vals <- pcor$p.value
hist(p_vals,
main = "P values of Partial Corellations",
xlab = "P values")
# Chunk 21
n <- ncol(log_norm_dat)
n_tests <- (n*(n-1))/2
adj_p_vals <- p_vals * n_tests
adj_p_vals[adj_p_vals > 1] = 1
hist(adj_p_vals[adj_p_vals < 1],
main = "P values of Partial Corellations Less Than 1",
xlab = "P values less than 1")
# Chunk 22
adj_mat <- pcor$estimate
adj_mat[adj_p_vals > 0.05] = 0
for (i in 1:nrow(adj_mat)) {
adj_mat[i, i] = 0
}
colnames(adj_mat) <- colnames(log_norm_dat)
rownames(adj_mat) <- colnames(log_norm_dat)
# Chunk 23
# Assemble the non-zero matrix
nonzero_metabolites <- c()
for (metabolite in colnames(adj_mat)) {
if (any(adj_mat[metabolite, ] != 0) |
any(adj_mat[, metabolite] != 0)) {
nonzero_metabolites %<>% append(metabolite)
}
}
adj_mat <- adj_mat[nonzero_metabolites, nonzero_metabolites]
library(igraph)
graph <- graph.adjacency(adj_mat,
weighted = TRUE,
diag = FALSE,
mode = 'directed')
degree(graph) %>%
table()
degree(graph) %>%
table() %>%
kable()
degree(graph) %>%
rev()
degree(graph) %>%
rev() %>%
table() %>%
kable()
degree(graph) %>%
table() %>%
rev
degree(graph) %>%
table() %>%
rev %>%
kable()
degree(graph) %>%
table()
degree(graph) %>%
table()
V(graph)
V(graph)[c("M34400")]
?sort
sort(degrees, index.return=TRUE)
names <- V(graph)$names
degrees <- degree(graph)
sort(degrees, index.return=TRUE)
idx <- sort(degrees,
decreasing = TRUE,
index.return=TRUE)
idx <- sort(degrees,
decreasing = TRUE,
index.return=TRUE)$ix
idx
sort(degrees,
decreasing = TRUE,
index.return=TRUE)
data_env$annotations[sorted_by_degree[1:10],]
sorted_by_degree <-
sort(degrees,
decreasing = TRUE,
index.return=TRUE)
data_env$annotations[sorted_by_degree[1:10],]
sorted_by_degree
high_degree_metabolites <- names(sorted_by_degree[1:10])
data_env$annotations[high_degree_metabolites,]
high_degree_metabolites
sorted_by_degree <-
sort(degrees,
decreasing = TRUE)
high_degree_metabolites <- names(sorted_by_degree[1:10])
high_degree_metabolites
data_env$annotations[high_degree_metabolites,]
data_env %>%
.$annotations %>%
.[high_degree_metabolites,] %>%
as.data.frame()
sorted_degrees <- sort(degrees, decreasing = TRUE)
data_env %>%
.$annotations %>%
.[high_degree_metabolites,] %>%
as.data.frame() %>%
mutate(degree=sorted_degrees[1:10])
V(graph)$names <- colnames(log_norm_dat)
names <- V(graph)$names
degrees <- degree(graph)
sorted_degrees <- sort(degrees, decreasing = TRUE)
sorted_by_degree <-
sort(degrees,
decreasing = TRUE)
high_degree_metabolites <- names(sorted_by_degree[1:10])
data_env %>%
.$annotations %>%
.[high_degree_metabolites,] %>%
as.data.frame() %>%
mutate(degree=sorted_degrees[1:10], .after=name)
names <- colnames(adj_mat)
degrees <- degree(graph)
sorted_degrees <- sort(degrees, decreasing = TRUE)
sorted_by_degree <-
sort(degrees,
decreasing = TRUE)
high_degree_metabolites <- names(sorted_by_degree[1:10])
data_env %>%
.$annotations %>%
.[high_degree_metabolites,] %>%
as.data.frame() %>%
mutate(degree=sorted_degrees[1:10], .after=name) %>%
kable()
library(knitr)
sorted_p_vals <- sort(adj_p_vals)[1:10]
top_ten <- names(sorted_p_vals)
rownames(data_env$annotations) <- colnames(log_norm_dat)
data_env$annotations[top_ten, ] %>%
as.data.frame() %>%
mutate(p_val = sorted_p_vals[1:10], .after=name)
kable()
data_env$annotations[top_ten, ] %>%
as.data.frame()
sorted_p_vals <- sort(adj_p_vals)[1:10]
top_ten <- names(sorted_p_vals)
top_ten
names <- colnames(adj_mat)
degrees <- degree(graph)
sorted_degrees <- sort(degrees, decreasing = TRUE)
sorted_by_degree <-
sort(degrees,
decreasing = TRUE)
high_degree_metabolites <- names(sorted_by_degree[1:10])
data_env %>%
.$annotations %>%
.[high_degree_metabolites,] %>%
as.data.frame() %>%
mutate(degree=sorted_degrees[1:10], .after=name) %>%
kable()
load('data/Simulated_metabolomics_data.RData')
library(data.table)
library(ggplot2)
library(reshape2)
dat.tbl = data.table(dat)
dat.tbl$samp = 1:nrow(dat.tbl)
dat.tbl$samp = as.factor(dat.tbl$samp)
dat.tbl = melt(dat.tbl, id.vars = "samp")
dat.tbl$transvalue = log(dat.tbl$value)
p = ggplot(dat.tbl, aes(x=samp,y=transvalue)) + geom_boxplot() + xlab("Sample") + ylab("Log-transformed Value")
p
meds = dat.tbl[,2:3][,median(unlist(.SD)), by = variable]
dat.tbl = merge(dat.tbl, meds, by = "variable")
setnames(dat.tbl, "V1", "median_value")
dat.tbl[, ratio := value/median_value]
dil_med = dat.tbl[,c(2,6)][,median(unlist(.SD)), by = samp]
dat.tbl = merge(dat.tbl, dil_med, by = "samp")
setnames(dat.tbl, "V1", "dilution_ratio")
dat.tbl[, norm_value := value/dilution_ratio]
#Take the log-transformation of the values and plot as a boxplot to see if the normalization looks good!
dat.tbl[, norm_value_trans := log(norm_value)]
p2 = ggplot(dat.tbl, aes(x=samp,y=norm_value_trans)) + geom_boxplot() + xlab("Sample") + ylab("Log-transformed Value")
p2
gender = data.table(gender)
gender$samp = 1:nrow(gender)
gender$samp = as.factor(gender$samp)
dat.tbl = merge(dat.tbl, gender, by = "samp")
ttests = dat.tbl[, t.test(unlist(.SD[gender == 1,norm_value]),unlist(.SD[gender == 2,norm_value])), by = variable]
ttests = ttests[seq(1,669,2),] #de-duplicating t-test results
p3 = ggplot(ttests, aes(x = p.value)) + geom_density() + xlab("Raw p value")
p3
ttests[p.value < 0.05, .N] #how many p-values are significant for an alpha of 0.05?
adj_pvals = data.table(p.adjust(ttests$p.value, method = "BH"))
p4 = ggplot(adj_pvals, aes(x = V1)) + geom_density() + xlab("Adjusted p value")
p4
adj_pvals[V1 < 0.05, .N] #how many p-values are significant for an alpha of 0.05?
ttests$adj_pval = adj_pvals
topten = ttests[order(adj_pval)][1:10]$variable
topten = data.table(topten)
setnames(topten, "topten","name")
topten = merge(topten, annotations, by = "name", all.x = TRUE)
topten[, .N, by = .(Super_pathway, Sub_pathway)]
tophit = ttests[order(adj_pval)][1]$variable
dat.tbl.tophit = dat.tbl[variable == tophit]
dat.tbl.tophit$gender = as.factor(dat.tbl.tophit$gender)
p4 = ggplot(data = dat.tbl.tophit, aes(x=gender, y=norm_value_trans)) + geom_boxplot()
p4
data_dir <- "/home/x1/Documents/Weill_Cornell/Functional_Interpretation/metabolomics/homework_1/data/"
data_filename <- list.files(data_dir, "Simulated_metabolomics_data.RData",
full.names = TRUE)
library(magrittr)
load(data_filename)
View(annotations)
data_env <- new.env()
load('Simulated_metabolomics_data.RData', envir = data_env)
library(magrittr)
data_dir <- "/home/x1/Documents/Weill_Cornell/Functional_Interpretation/metabolomics/homework_1/data/"
data_filename <- list.files(data_dir, "Simulated_metabolomics_data.RData",
full.names = TRUE)
data_filename %<>% normalizePath(mustWork=TRUE)
data_env <- new.env()
load(data_filename, envir = data_env)
ls(data_env)
View(data_env)
View(data_env)
